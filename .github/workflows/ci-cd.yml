name: CI/CD - Build & Deploy (EC2 Self-Hosted)

on:
  push:
    branches: [ "dev", "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: [self-hosted, linux]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Write the ONE .env you were given into backend/.env
      - name: Create backend/.env
        run: |
          set -euo pipefail
          mkdir -p backend
          printf "%s" "${{ secrets.BACKEND_ENV_DEV }}" > backend/.env
          chmod 600 backend/.env

      - name: Verify Docker & Compose
        run: |
          docker version
          docker compose version

      # Important: pass --env-file so ${DB_*} in docker-compose.yml get values for postgres
      - name: Build containers (with env)
        run: |
          set -euo pipefail
          docker compose --env-file backend/.env build --pull

      - name: Start/Update stack (with env)
        run: |
          set -euo pipefail
          docker compose --env-file backend/.env up -d --force-recreate --remove-orphans

      - name: Show status
        if: always()
        run: |
          docker compose --env-file backend/.env ps
          echo "---- Backend logs (tail) ----"
          docker comp
